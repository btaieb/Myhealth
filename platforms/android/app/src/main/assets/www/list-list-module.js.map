{"version":3,"sources":["webpack:///./src/app/list/list.module.ts","webpack:///./src/app/list/list.page.html","webpack:///./src/app/list/list.page.scss","webpack:///./src/app/list/list.page.ts","webpack:///./src/app/services/database.service.ts"],"names":[],"mappings":"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","file":"list-list-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { RouterModule } from '@angular/router';\n\nimport { ListPage } from './list.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        component: ListPage\n      }\n    ])\n  ],\n  declarations: [ListPage]\n})\nexport class ListPageModule {}\n","module.exports = \"<ion-header>\\n    <ion-toolbar>\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-menu-button></ion-menu-button>\\n        </ion-buttons>\\n        <ion-title>\\n            List\\n        </ion-title>\\n    </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n    <ion-list>\\n        \\n        <ion-item *ngFor=\\\"let item of products\\\">\\n            <ion-icon [name]=\\\"item.id\\\" slot=\\\"start\\\"></ion-icon>\\n            {{ item.name }}\\n            <div class=\\\"item-note\\\" slot=\\\"end\\\">\\n                {{ item.name }}\\n            </div>\\n        </ion-item>\\n    </ion-list>\\n\\n    <!--\\n <ion-list>\\n    <ion-item *ngFor=\\\"let item of items\\\">\\n      <ion-icon [name]=\\\"item.icon\\\" slot=\\\"start\\\"></ion-icon>\\n      {{item.title}}\\n      <div class=\\\"item-note\\\" slot=\\\"end\\\">\\n        {{item.note}}\\n      </div>\\n    </ion-item>\\n  </ion-list>\\n\\n  -->\\n    <!--\\n    <div *ngIf=\\\"selectedItem\\\" padding>\\n      You navigated here from <b>{{selectedItem.title }}</b>\\n    </div>\\n  -->\\n</ion-content>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xpc3QvbGlzdC5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from \"@angular/core\";\nimport { DatabaseService, Product } from \"../services/database.service\";\nimport { Observable } from \"rxjs\";\n\n@Component({\n  selector: \"app-list\",\n  templateUrl: \"list.page.html\",\n  styleUrls: [\"list.page.scss\"]\n})\nexport class ListPage implements OnInit {\n  private selectedItem: any;\n  products: Observable<any[]>;\n\n  /*\n  private icons = [\n    'flask',\n    'wifi',\n    'beer',\n    'football',\n    'basketball',\n    'paper-plane',\n    'american-football',\n    'boat',\n    'bluetooth',\n    'build'\n  ];\n//  public items: Array<{ title: string; note: string; icon: string }> = [];\n  constructor() {\n    for (let i = 1; i < 11; i++) {\n      this.items.push({\n        title: 'Item ' + i,\n        note: 'This is item #' + i,\n        icon: this.icons[Math.floor(Math.random() * this.icons.length)]\n      });\n    }\n  }*/\n  constructor(private db: DatabaseService) {}\n\n  ngOnInit() {\n    /*this.db.getDatabaseState().subscribe(rdy => {\n      if (rdy) {\n        // this.db.getProducts().subscribe(p => {\n        //  this.products = p;\n        // })\n        this.products = this.db.getProducts();\n      }\n    });\n    */\n  }\n  // add back when alpha.4 is out\n  // navigate(item) {\n  //   this.router.navigate(['/list', JSON.stringify(item)]);\n  // }\n}\n","import { Platform } from '@ionic/angular';\nimport { Injectable } from '@angular/core';\nimport { SQLitePorter } from '@ionic-native/sqlite-porter/ngx';\nimport { HttpClient } from '@angular/common/http';\nimport { SQLite, SQLiteObject } from '@ionic-native/sqlite/ngx';\nimport { BehaviorSubject, Observable } from 'rxjs';\nexport interface Product {\n  id: number;\n  name: string;\n}\n@Injectable({\n  providedIn: 'root'\n})\nexport class DatabaseService {\n  private database: SQLiteObject;\n  private dbReady: BehaviorSubject<boolean> = new BehaviorSubject(false);\n\n  products = new BehaviorSubject([]);\n\n  constructor(\n    private plt: Platform,\n    private sqlitePorter: SQLitePorter,\n    private sqlite: SQLite,\n    private http: HttpClient\n  ) {\n    this.plt.ready().then(() => {\n      this.sqlite\n        .create({\n          name: 'myhealth.db',\n          location: 'default'\n        })\n        .then((db: SQLiteObject) => {\n          this.database = db;\n          this.seedDatabase();\n        });\n    });\n  }\n\n  seedDatabase() {\n    this.http\n      .get('assets/data.sql', { responseType: 'text' })\n      .subscribe((sql) => {\n        this.sqlitePorter\n          .importSqlToDb(this.database, sql)\n          .then((_) => {\n            this.getProducts();\n            this.dbReady.next(true);\n          })\n          .catch((e) => console.error(e));\n      });\n  }\n\n  getDatabaseState() {\n    return this.dbReady.asObservable();\n  }\n\n  getProducts(): Observable<any[]> {\n    return this.products.asObservable();\n  }\n\n  loadProducts() {\n    let query = 'SELECT products.name AS name, products.id As id FROM products';\n    return this.database.executeSql(query, []).then((data) => {\n      let products = [];\n      if (data.rows.length > 0) {\n        for (var i = 0; i < data.rows.length; i++) {\n          products.push({\n            name: data.rows.item(i).name,\n            id: data.rows.item(i).id\n          });\n        }\n      }\n      this.products.next(products);\n    });\n  }\n\n  addProduct(name) {\n    let data = [name];\n    return this.database\n      .executeSql('INSERT INTO product (name) VALUES (?)', data)\n      .then((data) => {\n        this.loadProducts();\n      });\n  }\n\n  /*\n  getProducts(): Observable<any[]> {\n    return this.products.asObservable();\n  }\n  */\n\n  deleteProduct(id) {\n    return this.database\n      .executeSql('DELETE FROM products WHERE id = ?', [id])\n      .then((_) => {\n        this.loadProducts();\n      });\n  }\n\n  updateProduct(p: Product) {\n    let data = [p.name];\n    return this.database\n      .executeSql(`UPDATE products SET name = ? WHERE id = ${p.id}`, data)\n      .then((data) => {\n        this.loadProducts();\n      });\n  }\n}\n"],"sourceRoot":""}